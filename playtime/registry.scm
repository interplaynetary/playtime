(define-module (playtime registry)
  #:use-module (srfi srfi-13)
  #:use-module (goblins)
  #:use-module (goblins actor-lib methods)
  #:export (registry))

(define (hash-keys table)
  (hash-map->list (lambda (key value) key) table))

(define registry
  (let ((players (make-hash-table))
        (roles (make-hash-table))
        (role-players (make-hash-table)))
    (methods
      ((register-player symbol actor)
        (hash-set! players symbol actor))
      ((get-player symbol)
        (hash-ref players symbol #f))
      ((register-role symbol role)
        (hash-set! roles symbol role))
      ((get-role symbol)
        (hash-ref roles symbol #f))
      ((register-role-player role-symbol player-symbol)
        (let ((existing-players (hash-ref role-players role-symbol '())))
          (hash-set! role-players role-symbol 
            (append existing-players (list player-symbol)))))
      ((get-role-player role-symbol)
        (let ((player-instances (hash-ref role-players role-symbol '())))
          (if (not (null? player-instances))
              (car player-instances)
              #f)))
      ((roles) roles)
      ((players) players)
      ((role-players) role-players)
      ((get-role-players role-symbol)
        (hash-ref role-players role-symbol '())))))
