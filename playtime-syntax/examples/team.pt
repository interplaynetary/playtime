(context team-abc
  (roles
    (designer
      (requires 'has-taste)
      (scripts
        (design ('abc))
        (present ('bcd))))
    (manager
      (scripts
        (plan ('abc))
        (assess ('bcd)))
      (requires 'has-empathy 'is-confident))
    (engineer
      (scripts
        (code ('abc))
        (test ('bcd)))
      (requires 'is-pragmatic 'is-analytical')))
  (enactment
    (manager plan)
    (designer design)))

(define (^greeter bcom our-name)   ; constructor (outer procedure)
  (lambda (your-name)              ; behavior    (inner procedure)
    (format #f "Hello ~a, my name is ~a!"
            your-name our-name)))

(display (call-with-vat team-abc
   (lambda ()
     (define alice (spawn ^greeter "Alice"))
     ($ alice "Bob"))))

;; (team
;;   (manager '(a))
;;   (designer '(b c d))
;;   (engineer '(e f g)))
